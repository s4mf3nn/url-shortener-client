name: Deploy to Firebase Hosting on merge
'on':
  push:
    branches:
      - master

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    env:
      REACT_APP_API_KEY: "${{ secrets.REACT_APP_API_KEY }}"
      REACT_APP_AUTH_DOMAIN: "${{ secrets.REACT_APP_AUTH_DOMAIN }}"
      REACT_APP_PROJECT_ID: "${{ secrets.REACT_APP_PROJECT_ID }}"
      REACT_APP_STORGE_BUCKET: "${{ secrets.REACT_APP_STORGE_BUCKET }}"
      REACT_APP_MESSAGING_SENDER_ID: "${{ secrets.REACT_APP_MESSAGING_SENDER_ID }}"
      REACT_APP_APP_ID: "${{ secrets.REACT_APP_APP_ID }}"
      REACT_APP_MEASUREMENT_ID: "${{ secrets.REACT_APP_MEASUREMENT_ID }}"
    steps:
      - uses: actions/checkout@v2
      - run: rm -rf node_modules && yarn install --frozen-lockfile
      - run: yarn build
      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_URL_SHORTENER_81190 }}'
          channelId: live
          projectId: url-shortener-81190
  # functions_deploy:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: ⬇️ Checkout repo
  #       uses: actions/checkout@v2

  #     - name: ⎔ Setup node
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: 16

  #     - name: 📥 Download deps
  #       working-directory: functions
  #       run: yarn install

  #     - name: Create SA key
  #       run: echo '${{ secrets.SERVICE_ACCOUNT_KEY }}' > $HOME/gcloud.json

  #     - name: 🚀 Deploy
  #       run: export GOOGLE_APPLICATION_CREDENTIALS=$HOME/gcloud.json && npx firebase-tools deploy --token "$FIREBASE_TOKEN" --only functions --json
  #       env:
  #         FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}